// Core libraries from CDN
const CORE_LIBS = {
    jquery: 'https://code.jquery.com/jquery-3.7.1.min.js',
    bootstrap: 'https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js',
    gsap: 'https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js',
    scrollTrigger: 'https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/ScrollTrigger.min.js'
};

// Load core libraries asynchronously
async function loadCoreLibraries() {
    for (const [name, url] of Object.entries(CORE_LIBS)) {
        await loadScript(url);
    }
}

// Helper function to load scripts
function loadScript(url) {
    return new Promise((resolve, reject) => {
        const script = document.createElement('script');
        script.src = url;
        script.async = true;
        script.onload = resolve;
        script.onerror = reject;
        document.head.appendChild(script);
    });
}

// Load feature-specific scripts on demand
function loadFeatureScripts() {
    const features = {
        slider: ['slick.min.js'],
        popup: ['jquery.magnific-popup.min.js'],
        animation: ['wow.min.js'],
        gallery: ['imagesloaded.pkgd.min.js', 'isotope.pkgd.min.js'],
        scroll: ['lenis.min.js'],
        text: ['SplitText.js', 'marquee.js']
    };

    // Check which features are needed based on page elements
    const neededFeatures = [];
    if (document.querySelector('.slick-slider')) neededFeatures.push('slider');
    if (document.querySelector('.popup-link')) neededFeatures.push('popup');
    if (document.querySelector('.wow')) neededFeatures.push('animation');
    if (document.querySelector('.gallery')) neededFeatures.push('gallery');
    if (document.querySelector('.smooth-scroll')) neededFeatures.push('scroll');
    if (document.querySelector('.split-text')) neededFeatures.push('text');

    // Load needed feature scripts
    neededFeatures.forEach(feature => {
        features[feature].forEach(script => {
            loadScript(`assets/js/${script}`);
        });
    });
}

// Initialize features after core libraries are loaded
async function initApp() {
    await loadCoreLibraries();
    await Promise.all([
        loadFeatureScripts(),
        loadScript('assets/js/image-loader.min.js')
    ]);
}
